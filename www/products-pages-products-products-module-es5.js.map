{"version":3,"sources":["webpack:///src/app/products/pages/products/products.page.html","webpack:///src/app/products/pages/products/products.page.scss","webpack:///src/app/products/pages/products/products.page.ts","webpack:///src/app/products/pages/products/products-routing.module.ts","webpack:///src/app/products/pages/products/products.module.ts"],"names":["ProductsPage","formBuilder","productsService","menu","validatorService","modalCtrl","allProducts","isUpdating","productId","categorias","name","form","group","required","barCode","minLength","unitPrice","min","max","stock","category","validators","codigoExiste","products","getAllProducts","subscribe","sort","a","b","createdAt","swipeGesture","enable","open","product","value","Date","invalid","markAllAsTouched","console","log","addProduct","reset","id","deleteProduct","get","setValue","updateProduct","create","component","cssClass","modal","present","selector","template","routes","path","ProductsPageRoutingModule","imports","forChild","exports","ProductsPageModule","declarations"],"mappings":"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","file":"products-pages-products-products-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"onToggleMenu()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"menu-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"presentModal()\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n        Buscar\\n      </ion-button>\\n    </ion-buttons>\\n    <!-- <ion-title>Productos</ion-title> -->\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size=\\\"8\\\">\\n          <ion-grid>\\n            <ion-row> <!-- Encabezados -->\\n              <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\"><h6>Código</h6></ion-col>              \\n              <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\"><h6>Nombre</h6></ion-col>\\n              <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\"><h6>Precio</h6></ion-col>\\n              <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\"><h6>Cantidad</h6></ion-col>\\n              <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\"><h6>Categoría</h6></ion-col>\\n              <!-- <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\"><h6>Proveedor</h6></ion-col> -->\\n            </ion-row> <!-- Fin de los encabezados-->\\n\\n            <div class=\\\"scroll\\\">\\n              <ion-row *ngFor=\\\"let product of allProducts\\\" class=\\\"row-product\\\"> <!-- Fila a repetir -->\\n                \\n                <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">{{ product.barCode }}</ion-col>\\n                <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">{{ product.name }}</ion-col>\\n                <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">{{ product.unitPrice }}</ion-col>\\n                <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">{{ product.stock }}</ion-col>\\n                <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">{{ product.category }}</ion-col>\\n                <!-- <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">{{ product.provider }}</ion-col> -->\\n                <ion-col size=\\\"2\\\">\\n                  <ion-button (click)=\\\"fillFormToUpdate( product )\\\">\\n                    <ion-icon slot=\\\"icon-only\\\" name=\\\"sync-outline\\\"></ion-icon>\\n                  </ion-button>\\n                  <ion-button color=\\\"danger\\\" (click)=\\\"onDelete( product.id )\\\">\\n                    <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon>\\n                  </ion-button>\\n                </ion-col>\\n              </ion-row> <!-- Fin de la fila a repetir-->\\n            </div>\\n\\n          </ion-grid>\\n        </ion-col> <!-- Fin de la columna de 8-->\\n        <ion-col size=\\\"4\\\"> <!-- Columna del formulario-->\\n          <form (ngSubmit)=\\\"onAddProduct()\\\" [formGroup]=\\\"form\\\" >\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Nombre</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Código</ion-label>\\n              <ion-input type=\\\"number\\\" formControlName=\\\"barCode\\\"></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Precio</ion-label>\\n              <ion-input type=\\\"number\\\" formControlName=\\\"unitPrice\\\"></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Cantidad</ion-label>\\n              <ion-input type=\\\"number\\\" formControlName=\\\"stock\\\"></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label>Categoría</ion-label>\\n              <ion-select placeholder=\\\"Seleccione uno\\\" interface=\\\"popover\\\" formControlName=\\\"category\\\">\\n                  <ion-select-option [value]=\\\"item.name\\\" *ngFor=\\\"let item of categorias\\\">{{ item.name }}</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n\\n            <!-- <ion-item>\\n              <ion-label>Proveedor</ion-label>\\n              <ion-select placeholder=\\\"Seleccione uno\\\" interface=\\\"popover\\\" formControlName=\\\"provider\\\">\\n                  <ion-select-option [value]=\\\"item.name\\\" *ngFor=\\\"let item of categorias\\\">{{ item.name }}</ion-select-option>\\n              </ion-select>\\n            </ion-item> -->\\n\\n            <div class=\\\"buttons\\\">\\n              <ion-button class=\\\"ion-margin-top\\\" fill=\\\"outline\\\" type=\\\"button\\\" color=\\\"danger\\\" (click)=\\\"onCancel()\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n                Cancelar\\n              </ion-button>\\n\\n              <ion-button class=\\\"ion-margin-top\\\" fill=\\\"outline\\\" *ngIf=\\\" isUpdating \\\" (click)=\\\"onUpdate()\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n                Actualizar\\n              </ion-button>\\n\\n              <ion-button class=\\\"ion-margin-top\\\" fill=\\\"outline\\\" type=\\\"submit\\\" *ngIf=\\\" !isUpdating \\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n                Guardar\\n              </ion-button>\\n  \\n            </div>\\n          </form>\\n        </ion-col> <!-- Fin de la columna del formulario-->\\n      </ion-row> <!-- Fin de la fila principal -->\\n    </ion-grid>\\n</ion-content>\";","export default \"ion-row {\\n  border-bottom: 1px solid black;\\n}\\n\\nform {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\nform div.buttons {\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.row-product:nth-child(odd) {\\n  background-color: #c7c7c7;\\n}\\n\\n.row-product:hover {\\n  background-color: #949494;\\n  color: #000000;\\n}\\n\\n.scroll {\\n  height: 400px;\\n  overflow-y: scroll;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2R1Y3RzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDhCQUFBO0FBQ0o7O0FBRUE7RUFDSSxXQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0FBQ0o7O0FBRUk7RUFDSSxhQUFBO0VBQ0EsOEJBQUE7QUFBUjs7QUFJQTtFQUNJLHlCQUFBO0FBREo7O0FBSUE7RUFDSSx5QkFBQTtFQUNBLGNBQUE7QUFESjs7QUFJQTtFQUNJLGFBQUE7RUFDQSxrQkFBQTtBQURKIiwiZmlsZSI6InByb2R1Y3RzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1yb3cge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBibGFjaztcbn1cblxuZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIC8vIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcblxuICAgIGRpdi5idXR0b25zIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIH1cbn1cblxuLnJvdy1wcm9kdWN0Om50aC1jaGlsZChvZGQpIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTk5LCAxOTksIDE5OSk7XG59XG5cbi5yb3ctcHJvZHVjdDpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE0OCwgMTQ4LCAxNDgpO1xuICAgIGNvbG9yOiAjMDAwMDAwO1xufVxuXG4uc2Nyb2xsIHtcbiAgICBoZWlnaHQ6IDQwMHB4O1xuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ProductsService } from '../../services/products.service';\nimport { Observable } from 'rxjs';\nimport { Products } from '../../interface/products-interface';\nimport { MenuController, ModalController } from '@ionic/angular';\nimport { ValidatorService } from '../../../auth/services/validator.service';\nimport { SearchBarComponent } from '../../components/search-bar/search-bar.component';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.page.html',\n  styleUrls: ['./products.page.scss'],\n})\nexport class ProductsPage implements OnInit {\n\n  products: Observable<Products[]>;\n  allProducts: Products[] = [];\n\n  isUpdating: boolean = false;\n\n  productId = '';\n\n  categorias = [\n    {\n      name: 'Pastillas'\n    },\n    {\n      name: 'Hierbas'\n    },\n    {\n      name: 'Esotéricos'\n    }\n  ];\n\n  constructor(private formBuilder: FormBuilder,\n              private productsService: ProductsService,\n              private menu: MenuController,\n              private validatorService: ValidatorService,\n              private modalCtrl: ModalController ) {\n                this.products = this.productsService.getAllProducts();\n                this.products\n                .subscribe( products => {\n                  // Asignación de todos los productos y ordenados por la fecha de creación.\n                  this.allProducts = products.sort( ( a, b ) => {\n                    if( a.createdAt > b.createdAt ) {\n                      return 1;\n                    } if ( a.createdAt < b.createdAt ) {\n                      return -1;\n                    } else {\n                      return 0;\n                    }\n                  });\n                });\n\n              }\n              \n  // Campos del formulario\n  form: FormGroup = this.formBuilder.group({\n    name: [ '', [ Validators.required ] ],\n    barCode: [ '', [ Validators.required, Validators.minLength( 3 ) ] ],\n    unitPrice: [ 0, [ Validators.required, Validators.min( 1 ), Validators.max( 1000 ) ] ],\n    stock: [ 0, [ Validators.required, Validators.min( 1 ), Validators.max( 500 ) ] ],\n    category: [ '', [ Validators.required ] ],\n    // provider: [ '', [ Validators.required ] ]\n    \n  },{\n    validators: [ this.validatorService.codigoExiste( 'barCode' ) ]\n  });\n  \n  ngOnInit(): void {\n    // Evita que el menú se abra arrastrando\n    this.menu.swipeGesture( false, 'first');\n  }\n\n  // Abrir menú\n  onToggleMenu() {\n    this.menu.enable( true, 'first');\n    this.menu.open('first');\n  }\n\n  // Guardar Producto\n  onAddProduct(): void {\n\n    const product = this.form.value;\n    product.createdAt = new Date();\n\n    if ( this.form.invalid ) {\n      this.form.markAllAsTouched();\n      console.log( this.form );\n      console.log( product );\n      return;\n    }\n\n\n    this.productsService.addProduct( product );\n    this.form.reset();\n  }\n\n  // Eliminar Producto\n  onDelete( id: string ): void {\n    this.productsService.deleteProduct( id );\n  }\n\n  // Llenar el formulario cuando se da click en el botón de actualizar\n  fillFormToUpdate( product: Products ): void {\n    // Obtener todos los capmos de la tabla\n    const { unitPrice, stock, barCode, category, id, name } = product;\n    this.productId = id;\n\n    // Asignar todos los campos al formulario\n    this.form.get('name').setValue( name );\n    this.form.get('barCode').setValue( barCode );\n    this.form.get('unitPrice').setValue( unitPrice );\n    this.form.get('stock').setValue( stock );\n    this.form.get('category').setValue( category );\n    // this.form.get('provider').setValue( provider );\n\n    // Mostrar el botón de actualizar\n    this.isUpdating = true;\n  }\n\n  // Reiniciar el formulario\n  onCancel(): void {\n    this.form.reset();\n    this.isUpdating = false;\n  }\n\n  // Actualizar producto\n  onUpdate() {\n\n    // Obtener todos los valores del formulario y agregar la propiedad del id\n    const product = this.form.value;\n    product.id = this.productId;\n\n    // Llamado del servicio para actualizar el producto.\n    this.productsService.updateProduct( product );\n    this.isUpdating = false;\n    this.form.reset();\n  }\n\n  // Barra de busquedas\n  async presentModal() {\n    const modal = await this.modalCtrl.create({\n      component: SearchBarComponent,\n      cssClass: 'modal'\n    });\n\n    return await modal.present();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProductsPage } from './products.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProductsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProductsPageRoutingModule } from './products-routing.module';\n\nimport { ProductsPage } from './products.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ProductsPageRoutingModule\n  ],\n  declarations: [\n    ProductsPage\n  ]\n})\nexport class ProductsPageModule {}\n"]}