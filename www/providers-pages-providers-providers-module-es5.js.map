{"version":3,"sources":["webpack:///src/app/providers/pages/providers/providers.page.scss","webpack:///src/app/providers/pages/providers/providers.page.ts","webpack:///src/app/providers/pages/providers/providers-routing.module.ts","webpack:///src/app/providers/pages/providers/providers.module.ts","webpack:///src/app/providers/pages/providers/providers.page.html"],"names":["ProvidersPage","menu","modalCtrl","providerService","alerCtrl","allProviders","providers","getAllProviders","subscribe","sort","a","b","nameCompany","swipeGesture","enable","open","providerId","presentAlert","create","component","cssClass","modal","present","provider","componentProps","nameProvider","category","telephone","email","id","header","buttons","text","handler","deleteProvider","alert","selector","template","routes","path","ProvidersPageRoutingModule","imports","forChild","exports","ProvidersPageModule","declarations"],"mappings":"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","file":"providers-pages-providers-providers-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm92aWRlcnMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { MenuController, ModalController, AlertController } from '@ionic/angular';\nimport { ModalComponent } from '../../components/modal/modal.component';\nimport { ProviderService } from '../../services/provider.service';\nimport { Provider } from '../../interface/provider-interface';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-providers',\n  templateUrl: './providers.page.html',\n  styleUrls: ['./providers.page.scss'],\n})\nexport class ProvidersPage implements OnInit {\n\n  providers: Observable<Provider[]>;\n  allProviders: Provider[] = [];\n\n  constructor(private menu: MenuController,\n              private modalCtrl: ModalController,\n              private providerService: ProviderService,\n              private alerCtrl: AlertController) {\n                this.providers = this.providerService.getAllProviders();\n                this.providers\n                .subscribe( providers => {\n                  // Asignación de todos los proveedores y ordenados por nombre de compañia.\n                  this.allProviders = providers.sort( ( a, b ) => {\n                    if( a.nameCompany > b.nameCompany ){\n                      return 1;\n                    } if( a.nameCompany < b.nameCompany ) {\n                      return -1;\n                    } else {\n                      return 0;\n                    }\n                  });\n                });\n  }\n\n  ngOnInit() {\n    // Evita que el menú se abra arrastrando\n    this.menu.swipeGesture( false, 'first');\n  }\n\n  onToggleMenu() {\n    this.menu.enable( true, 'first');\n    this.menu.open('first');\n  }\n\n  async onDelete( providerId: string  ) {\n    await this.presentAlert( providerId );\n  }\n\n  async presentModal() {\n    const modal = await this.modalCtrl.create({\n      component: ModalComponent,\n      cssClass: 'modal'\n    });\n\n    return await modal.present();\n  }\n\n  async presentModalProps( provider: Provider ) {\n    const modal = await this.modalCtrl.create({\n      component: ModalComponent,\n      cssClass: 'modal',\n      componentProps: {\n        'name': provider.nameProvider,\n        'nameCompany': provider.nameCompany,\n        'category': provider.category,\n        'telephone': provider.telephone,\n        'email': provider.email,\n        'providerId': provider.id\n      }\n    });\n\n    return await modal.present();\n  }\n\n  async presentAlert( providerId: string ) {\n\n    const alert = await this.alerCtrl.create({\n      header: '¿Está seguro que desea eliminar?',\n      buttons: [\n        {\n          text: 'Cancelar'\n        },\n        {\n          text: 'OK',\n          handler: () =>{\n            this.providerService.deleteProvider( providerId );\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProvidersPage } from './providers.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProvidersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProvidersPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProvidersPageRoutingModule } from './providers-routing.module';\n\nimport { ProvidersPage } from './providers.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ProvidersPageRoutingModule\n  ],\n  declarations: [ProvidersPage]\n})\nexport class ProvidersPageModule {}\n","export default \"<ion-header [translucent]=\\\"true\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"onToggleMenu()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"menu-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"ion-text-center\\\">\\n      Proveedores\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button color=\\\"success\\\" fill=\\\"solid\\\" shape=\\\"round\\\" (click)=\\\"presentModal()\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n        Agregar\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <ion-grid>\\n          <ion-row> <!-- Encabezados -->\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-center\\\"><h6> Nombre </h6></ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\"><h6> Compañia </h6></ion-col>\\n            <ion-col size=\\\"1\\\" class=\\\"ion-text-center\\\"><h6> Categoría </h6></ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\"><h6> Celular </h6></ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\"><h6> Correo </h6></ion-col>\\n          </ion-row> <!-- Fin de los encabezados-->\\n          <ion-row *ngFor=\\\"let provider of allProviders\\\"> <!-- Fila a repetir -->\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-center\\\">\\n              <p>{{ provider.nameProvider }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\n              <p>{{ provider.nameCompany }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"1\\\" class=\\\"ion-text-center\\\">\\n              <p>{{ provider.category }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\n              <p>{{ provider.telephone }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\n              <p>{{ provider.email }}</p>\\n            </ion-col>\\n            <ion-col size=\\\"2\\\">\\n              <ion-button color=\\\"danger\\\" class=\\\"ion-margin-end\\\" (click)=\\\"onDelete( provider.id )\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon>\\n              </ion-button>\\n\\n              <ion-button color=\\\"success\\\" (click)=\\\"presentModalProps( provider )\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"pencil-outline\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n\\n          </ion-row> <!-- Fin de la fila a repetir-->\\n        </ion-grid>\\n      </ion-col> <!-- Fin de la columna de 9-->\\n    </ion-row> <!-- Fin de la fila principal -->\\n  </ion-grid>\\n\\n</ion-content>\\n\";"]}